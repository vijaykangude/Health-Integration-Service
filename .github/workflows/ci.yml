# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      jar_version: ${{ steps.bump.outputs.jar_version }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - name: Checkout Latest Commit
      uses: actions/checkout@v2

    - name: Bump Version
      id: bump
      uses: nnichols/maven-version-bump-action@v3
      with:
        github-token: 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

    - name: Print Version
      run: "echo 'New Version: ${{steps.bump.outputs.version}}'"
            
    - name: Compile
      run: mvn -B compile --file pom.xml
      
    - name: Build a package
      run: mvn -B package --file pom.xml
      
    - name: Temporarily save jar artifact
      uses: actions/upload-artifact@v2
      with:
        name: jar-artifact
        path: ${{ github.workspace }}/target/*.jar
        retention-days: 1
        
  deploy:
    runs-on: ubuntu-18.04
    needs: build
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
          name: jar-artifact
          path: target/
    - name: Docker build
      run: |
        docker build . -t vijaykangude/health_integration_service:${{needs.build.outputs.jar_version}}
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker push
      run: |
        docker push vijaykangude/health_integration_service:${{needs.build.outputs.jar_version}}
  run:
    runs-on: ubuntu-18.04
    needs: [build, deploy]
    
    steps:
    - name: Run container
      run: |
        docker run vijaykangude/health_integration_service:${{needs.build.outputs.jar_version}}